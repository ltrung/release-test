# For the backwards compatibility test, this should be run on the release branch only as part.
# The release branch should not be tagged with the new version yet (that happens when we create a Github Release)
# so we can checkout the latest tag and install the new version tarball into the demo.
# For example, if we're about to release v2.14.0, first create a tarball (the relase commit should bump the pacakge.json version to v2.14.0)
# then check out the previous v2.13.0 demo using the v2.13.0 tag, then navigate to the v2.13.0 demo and install the v2.14.0 amazon-chime-sdk-js tarball.
# Then run the entire integration test suite on the demo.
name: Backwards Compatibility Test

on:
  push:
    branches:
      - release

jobs:
  release-integ-test:
    name: Run Backwards Compatible Integration Tests with Release Tarball
    runs-on: ubuntu-latest

    steps:
      - name: Setup Node.js - 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Checkout Package
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Clean Install
        run: npm ci